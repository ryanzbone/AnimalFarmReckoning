<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>controller = 0;
control_right = vk_right;
control_left = vk_left;
aimUp = vk_up;
aimDown = vk_down;
maxSpeed = playerMaxSpeed;
playerSpeed = playerMoveSpeed;
canJump = true;
jumpCount = 0;
ammoType = obj_no_ammo;
ammoCount = 0;
playerLives = 3;

myGun = instance_create(x,y,obj_gun);
myGun.playerId = id;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_controller(controller);

scr_gravity(gravityDirection, gravityAccel);

scr_apply_friction(control_right, control_left);
scr_aim_gun(aimUp,aimDown);

if(scr_check_bottom_collision(spr_player1) ) {
    canJump = true;
    jumpCount = 0;
} else if (jumpCount &gt;= 2) {
    canJump = false;
}

if(vspeed &gt; maxSpeed)
    vspeed = maxSpeed;
    
if(x &lt; -killRange 
    || x &gt; room_width + killRange 
    || y &gt; room_height + killRange/2 
    || y &lt; -killRange) {
    playerLives--;
    x = random_range(64,room_width-64);
    y = 100;
    vspeed = 0;
    hspeed = 0;
}
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_parent_pickup">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ammoType = other.pickupType;
ammoCount = other.pickupCount;
with(other) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_parent_animal">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var hSign = 0;
var vSign = 0;
var theMass = 1;
with(other) {
    if(hspeed &gt; 0) 
        hSign = 1;
    else
        hSign = -1;
    if(vspeed &gt; 0) 
        vSign = 1;
    else
        vSign = -1;
    theMass = mass;
    instance_destroy();
}

hspeed += (theMass * hSign);
vspeed += (theMass * vSign);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_parent_floor">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// if we've hit a wall, set horizontal speed to zero
if(scr_check_left_collision(spr_player1) || scr_check_right_collision(spr_player1)){
    if (hspeed &gt; 0)
        move_contact_solid(0, 12);
    else 
        move_contact_solid(180, 12);
    hspeed = 0;

} 
if(scr_check_top_collision(spr_player1)) {  
    move_contact_solid(90, 12);
    vspeed *= -0.6;
} 
if(scr_check_bottom_collision(spr_player1)) {
    move_contact_solid(270, 12);
    vspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_red);
draw_self();
draw_text(x,y-32,playerLives);
//draw_text(x,y-32,scr_check_top_collision(spr_player1));
//draw_text(x,y+32,scr_check_bottom_collision(spr_player1));
//draw_text(x-32,y,scr_check_left_collision(spr_player1));
//draw_text(x+32,y,scr_check_right_collision(spr_player1));
//draw_text(x,y-64,vspeed);
//draw_text(x+64,y,hspeed);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
